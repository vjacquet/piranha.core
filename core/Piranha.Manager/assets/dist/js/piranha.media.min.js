Vue.component("folder-item",{props:["item","selected"],methods:{toggleItem:function(e){e.isExpanded=!e.isExpanded}},template:"<li class='dd-item expanded' :class='{ active: item.id === selected, expanded: item.isExpanded || item.items.length === 0 }' :data-id='item.id'>  <a v-if='!item.edit' class='droppable' v-on:click.prevent='piranha.media.load(item.id)' href='#' draggable='true' v-on:dragstart='piranha.media.drag($event, item)' v-on:dragover='piranha.media.dragover' v-on:dragleave='piranha.media.dragleave' v-on:drop='piranha.media.drop($event, item.id)'>    <i class='fas fa-folder'></i>{{ item.name }}    <span class='badge badge-light float-right'>{{ item.mediaCount }}</span>  </a>  <form v-else v-on:submit.prevent='piranha.media.updateFolder()' class='d-inline-block'>    <i class='fas fa-folder'></i>    <input :id='\"folder-\" + item.id' type='text' v-on:keyup.esc='piranha.media.cancelEditFolder()' v-model='piranha.media.currentFolderName' class='form-control form-control-sm d-inline-block w-auto'>  </form>  <ol v-if='selected === item.id && piranha.media.isAdding' class='dd-list'>    <form v-on:submit.prevent='piranha.media.addFolder()' class='d-inline-block'>      <i class='fas fa-folder'></i><input id='add-folder' type='text' v-on:keyup.esc='piranha.media.isAdding = false' v-model='piranha.media.folder.name' class='form-control form-control-sm d-inline-block w-auto'>    </form>  </ol>  <ol v-if='item.items.length > 0' class='dd-list'>    <folder-item v-for='child in item.items' v-bind:key='child.id' v-bind:selected='selected' v-bind:item='child'></folder-item>  </ol></li>"}),piranha.media=new Vue({el:"#media",data:{loading:!0,listView:!0,currentFolder:null,currentFolderId:null,currentFolderName:null,parentFolderId:null,folders:[],items:[],structure:[],rootCount:null,totalCount:null,canDelete:!1,isAdding:!1,newFolderName:null,folder:{name:null},dropzone:null},methods:{bind:function(e){this.currentFolderId=e.currentFolderId,this.currentFolderName=e.currentFolderName,this.parentFolderId=e.parentFolderId,this.initFolders(e.structure),this.folders=e.folders,this.items=e.media,this.structure=e.structure,this.rootCount=e.rootCount,this.totalCount=e.totalCount,this.canDelete=e.canDelete,this.listView="list"===e.viewMode},initFolders:function(e){for(var t=0;t<e.length;t++)e[t].edit=!1,e[t].id===this.currentFolderId&&(this.currentFolder=e[t]),e[t].items.length>0&&this.initFolders(e[t].items)},editFolder:function(){this.currentFolder.edit=!0,this.$nextTick(function(){document.getElementById("folder-"+this.currentFolderId).focus()})},cancelEditFolder:function(){this.currentFolder.edit=!1,this.currentFolderName=this.currentFolder.name},drag:function(e,t){e.dataTransfer.setData("mediaId",t.id)},dragover:function(e){e.preventDefault();var t=$(e.target).closest(".droppable");t.hasClass("active")||t.addClass("active")},dragleave:function(e){e.preventDefault();var t=$(e.target).closest(".droppable");t.hasClass("active")&&t.removeClass("active")},drop:function(e,t){e.preventDefault();var i=$(e.target).closest(".droppable");i.hasClass("active")&&i.removeClass("active");var a=e.dataTransfer.getData("mediaId");fetch(piranha.baseUrl+"manager/api/media/move/"+a+"/"+(t||"")).then(function(e){return e.json()}).then(function(e){"success"===e.type&&piranha.media.refresh(),piranha.notifications.push(e)}).catch(function(e){console.log("error:",e)})},showList:function(){this.listView=!0},showGallery:function(){this.listView=!1},load:function(e,t){var i=this;t||history.pushState({folderId:e},"",piranha.baseUrl+"manager/media"+(e?"/"+e:"")),fetch(piranha.baseUrl+"manager/api/media/list"+(e?"/"+e:"")+"/?width=210&height=160").then(function(e){return e.json()}).then(function(e){i.bind(e),document.title=e.currentFolderName?e.currentFolderName:"Media"}).catch(function(e){console.log("error:",e)})},getThumbnailUrl:function(e){return null!==e.altVersionUrl?e.altVersionUrl:piranha.baseUrl+"manager/api/media/url/"+e.id+"/210/160"},refresh:function(){piranha.media.load(piranha.media.currentFolderId)},addFolder:function(){this.saveFolder(null,null,{parentId:this.currentFolderId,name:this.folder.name}),this.isAdding=!1},updateFolder:function(){this.saveFolder(null,null,{id:this.currentFolderId,name:this.currentFolderName})},saveFolder:function(e,t,i){var a=this;if(null!=t&&!1===(t=document.getElementById(t)).checkValidity())return void t.classList.add("was-validated");fetch(piranha.baseUrl+"manager/api/media/folder/save",{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify(i)}).then(function(e){return e.json()}).then(function(t){"success"===t.status.type&&(null!=e&&$(e).modal("hide"),a.folder.name=null,a.items=t.media,a.refresh()),piranha.notifications.push(t.status)}).catch(function(e){console.log("error:",e)})},remove:function(e){var t=this;fetch(piranha.baseUrl+"manager/api/media/delete/"+e).then(function(e){return e.json()}).then(function(e){t.bind(e),piranha.notifications.push(e.status)}).catch(function(e){console.log("error:",e)})},removeFolder:function(e){var t=this;fetch(piranha.baseUrl+"manager/api/media/folder/delete/"+e).then(function(e){return e.json()}).then(function(i){t.bind(i),history.pushState({folderId:e},"",piranha.baseUrl+"manager/media"+(e?"/"+e:"")),document.title=i.currentFolderName?i.currentFolderName:"Media",piranha.notifications.push(i.status)}).catch(function(e){console.log("error:",e)})}},updated:function(){this.loading&&(piranha.permissions.media.add&&(this.dropzone=piranha.dropzone.init("#media-upload-container",{uploadMultiple:!1}),this.dropzone.on("complete",function(e){"success"===e.status&&setTimeout(function(){piranha.media.dropzone.removeFile(e)},3e3)}),this.dropzone.on("queuecomplete",function(){piranha.media.refresh()})),this.loading=!1)},mounted:function(){var e=this;window.onpopstate=function(t){e.load(t.state&&t.state.folderId?t.state.folderId:"",!0)}}}),$(document).on("shown.bs.modal","#mediaFolderModal",function(e){$("#mediaFolderName").focus()});